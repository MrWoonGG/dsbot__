import disnake
from disnake.ext import commands
from disnake import TextInputStyle
from typing import Optional

import database


class TemplateOrderModal(disnake.ui.Modal):
    def __init__(self, channel: disnake.TextChannel):
        self.channel = channel
        components = [
            disnake.ui.TextInput(
                label="–°—Å—ã–ª–∫–∞ –Ω–∞ Discord —Å–µ—Ä–≤–µ—Ä",
                placeholder="https://discord.gg/example",
                custom_id="server_link",
                style=TextInputStyle.short,
                max_length=100,
            ),
            disnake.ui.TextInput(
                label="–î–ª—è —á–µ–≥–æ –Ω—É–∂–µ–Ω —à–∞–±–ª–æ–Ω?",
                placeholder="–û–ø–∏—à–∏—Ç–µ, –¥–ª—è –∫–∞–∫–æ–π —Ü–µ–ª–∏ –Ω—É–∂–µ–Ω —à–∞–±–ª–æ–Ω...",
                custom_id="template_purpose",
                style=TextInputStyle.paragraph,
            ),
        ]
        super().__init__(
            title="–ó–∞–∫–∞–∑ —à–∞–±–ª–æ–Ω–∞ Discord-—Å–µ—Ä–≤–µ—Ä–∞",
            custom_id="order_template",
            components=components,
        )
    
    async def callback(self, inter: disnake.ModalInteraction):
        server_link = inter.text_values["server_link"]
        template_purpose = inter.text_values["template_purpose"]
        
        if not server_link.startswith("https://discord.gg/"):
            await inter.response.send_message(
                "‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ Discord-—Å–µ—Ä–≤–µ—Ä!", ephemeral=True
            )
            return
        
        db = database.load_db()
        
        # ORDER
        db['orders_counter'] += 1
        order_id = db['orders_counter']
        
        db['orders'][str(order_id)] = {
            'user_id': inter.user.id,
            'worker_id': 0,
            'server_link': server_link,
            'template_purpose': template_purpose
        }
        
        database.save_db(db)
        
        embed = disnake.Embed(
            title=f"üìå –ó–∞–∫–∞–∑ #{str(order_id)}",
            color=disnake.Color.blue()
        )
        embed.add_field(name="üîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä", value=server_link, inline=False)
        embed.add_field(name="üìÑ –®–∞–±–ª–æ–Ω –Ω—É–∂–µ–Ω –¥–ª—è...", value=template_purpose[:1024], inline=False)
        
        embed.set_footer(text=f"–ó–∞–∫–∞–∑ –æ—Ç {inter.user}", icon_url=inter.user.avatar.url)
        await inter.response.send_message("–ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, –æ–∂–∏–¥–∞–π—Ç–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è!", ephemeral=True)
        
        await self.channel.send(embed=embed, view=TemplateOrder(self.channel))


class TemplateOrder(disnake.ui.View):
    def __init__(self, channel: disnake.TextChannel):
        self.channel = channel
        super().__init__(timeout=None)
    
    @disnake.ui.button(label='–ó–∞–∫–∞–∑–∞—Ç—å —à–∞–±–ª–æ–Ω (–ë–ï–°–ü–õ–ê–¢–ù–û)', style=disnake.ButtonStyle.green, emoji="‚úâÔ∏è")
    async def order_template(self, button: disnake.Button, inter: disnake.Interaction):
        await inter.response.send_modal(modal=TemplateOrderModal(channel=self.channel))
