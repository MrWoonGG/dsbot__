import disnake
from disnake.ext import commands
from logger import Logger
import database
from views import TemplateOrder
import threading
# ============================================

TOKEN = "MTM1MjI1MjExOTY4MzY5ODc0OQ.GNBht6.2b--nrO9vvVzPiK9DUFNwXfdPhqFXSZ_l2h9QQ"
GUILD_IDS = [1340550027126505513]

# ============================================

# ============================================

logger = Logger(debug_enabled=True)

bot = commands.Bot(intents=disnake.Intents.all())
db = database.load_db()


def load_db():
    return database.load_db()


@bot.event
async def on_ready():
    logger.info(f"Logged in as {bot.user.name}")


def has_admin_access(user_roles):
    db = load_db()
    return db['admin_role_id'] == 0 or any(role.id == db['admin_role_id']
                                           for role in user_roles)


def has_worker_access(user_roles):
    db = load_db()
    return db['workers_role_id'] == 0 or any(role.id == db['workers_role_id']
                                             for role in user_roles)


@bot.slash_command(guild_ids=GUILD_IDS,
                   description="–°–º–µ–Ω–∏—Ç—å –∫–∞–Ω–∞–ª —Å –∑–∞–∫–∞–∑–æ–º —à–∞–±–ª–æ–Ω–æ–≤")
async def change_channel(inter: disnake.CommandInteraction,
                         channel: disnake.TextChannel = commands.Param(
                             description="–ö–∞–Ω–∞–ª –¥–ª—è –∑–∞–∫–∞–∑–æ–≤ —à–∞–±–ª–æ–Ω–æ–≤")):
    await inter.response.defer(ephemeral=True)

    if has_admin_access(inter.user.roles):
        db['channel_id'] = channel.id
        database.save_db(db)
        await inter.edit_original_response(
            f"–ö–∞–Ω–∞–ª –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ {channel.mention}")
    else:
        await inter.edit_original_response(
            f"–í–∞–º –Ω–µ–ª—å–∑—è –≤—ã–ø–æ–ª–Ω—è—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É (–î–æ—Å—Ç—É–ø —É <@&{db['admin_role_id']}>)"
        )


@bot.slash_command(guild_ids=GUILD_IDS, description="–°–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å –∞–¥–º–∏–Ω–∞ –±–æ—Ç–∞")
async def change_admin_role(
    inter: disnake.CommandInteraction,
    role: disnake.Role = commands.Param(
        description="–†–æ–ª—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º –±–æ—Ç–∞")):
    await inter.response.defer(ephemeral=True)

    if has_admin_access(inter.user.roles):
        db['admin_role_id'] = role.id
        database.save_db(db)
        await inter.edit_original_response(f"–†–æ–ª—å –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ {role.mention}")
    else:
        await inter.edit_original_response(
            f"–í–∞–º –Ω–µ–ª—å–∑—è –≤—ã–ø–æ–ª–Ω—è—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É (–î–æ—Å—Ç—É–ø —É <@&{db['admin_role_id']}>)"
        )


@bot.slash_command(guild_ids=GUILD_IDS,
                   description="–°–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å —Ä–∞–±–æ—Ç–Ω–∏–∫–∞ –±–æ—Ç–∞")
async def change_worker_role(
    inter: disnake.CommandInteraction,
    role: disnake.Role = commands.Param(
        description="–†–æ–ª—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—Ä–∏–Ω—è—Ç–∏—é –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ —à–∞–±–ª–æ–Ω—ã")):
    await inter.response.defer(ephemeral=True)

    if has_admin_access(inter.user.roles):
        db['workers_role_id'] = role.id
        database.save_db(db)
        await inter.edit_original_response(f"–†–æ–ª—å –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ {role.mention}")
    else:
        await inter.edit_original_response(
            f"–í–∞–º –Ω–µ–ª—å–∑—è –≤—ã–ø–æ–ª–Ω—è—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É (–î–æ—Å—Ç—É–ø —É <@&{db['admin_role_id']}>)"
        )


@bot.slash_command(guild_ids=GUILD_IDS,
                   description="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
async def send_first_message(inter: disnake.CommandInteraction):
    await inter.response.defer(ephemeral=True)

    if has_admin_access(inter.user.roles):
        channel = bot.get_channel(db['channel_id'])
        await channel.send("–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∑–∞–∫–∞–∑–∞—Ç—å —à–∞–±–ª–æ–Ω:",
                           view=TemplateOrder(channel=channel))
        await inter.edit_original_response("–ì–æ—Ç–æ–≤–æ!")
    else:
        await inter.edit_original_response(
            f"–í–∞–º –Ω–µ–ª—å–∑—è –≤—ã–ø–æ–ª–Ω—è—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É (–î–æ—Å—Ç—É–ø —É <@&{db['admin_role_id']}>)"
        )


# –ü—Ä–∏—ë–º –∑–∞–∫–∞–∑–∞
@bot.slash_command(guild_ids=GUILD_IDS, description="–ü—Ä–∏–Ω—è—Ç—å –∑–∞–∫–∞–∑ —à–∞–±–ª–æ–Ω–∞")
async def accept_order(
    inter: disnake.CommandInteraction,
    order_id: int = commands.Param(description="–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞ (–±–µ–∑ #)")):
    await inter.response.defer(ephemeral=True)

    db = load_db()

    if not has_worker_access(inter.user.roles):
        await inter.edit_original_response(
            f"–í–∞–º –Ω–µ–ª—å–∑—è –≤—ã–ø–æ–ª–Ω—è—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É (–î–æ—Å—Ç—É–ø —É <@&{db['workers_role_id']}>)"
        )
        return

    order_key = str(order_id)
    if order_key not in db["orders"]:
        await inter.edit_original_response("‚ùå –ó–∞–∫–∞–∑ —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    order = db["orders"][order_key]

    if order["worker_id"] != 0:
        await inter.edit_original_response(
            f"‚ö† –ó–∞–∫–∞–∑ #{order_id} —É–∂–µ –ø—Ä–∏–Ω—è—Ç –¥—Ä—É–≥–∏–º –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º.")
        return

    order["worker_id"] = inter.user.id
    database.save_db(db)

    embed = disnake.Embed(title="‚úÖ –ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç!",
                          description=f"–í—ã –ø—Ä–∏–Ω—è–ª–∏ –∑–∞–∫–∞–∑ **#{order_id}**\n"
                          f"üîó **–°–µ—Ä–≤–µ—Ä:** {order['server_link']}\n"
                          f"üìù **–û–ø–∏—Å–∞–Ω–∏–µ:** {order['template_purpose']}",
                          color=disnake.Color.green())
    embed.set_footer(
        text=f"–î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —à–∞–±–ª–æ–Ω–∞ –∑–∞–∫–∞–∑—á–∏–∫—É –≤–≤–µ–¥–∏—Ç–µ /return_order",
        icon_url=inter.user.avatar.url)

    await inter.edit_original_response(embed=embed)

    channel = bot.get_channel(db['channel_id'])
    if channel:
        embed = disnake.Embed(title=f"üîî –ó–∞–∫–∞–∑ #{str(order_id)} –ø—Ä–∏–Ω—è—Ç",
                              color=disnake.Color.yellow())
        uid = order["user_id"]
        worker_ = order["worker_id"]
        embed.add_field(name="üßë‚Äçüíª –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å",
                        value=f"<@{worker_}>",
                        inline=False)
        embed.add_field(name="üîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä",
                        value=order['server_link'],
                        inline=False)
        embed.add_field(name="üìÑ –®–∞–±–ª–æ–Ω –Ω—É–∂–µ–Ω –¥–ª—è...",
                        value=order['template_purpose'][:1024],
                        inline=False)
        await channel.send(f'||<@{uid}>||',
                           embed=embed,
                           view=TemplateOrder(channel))


@bot.slash_command(guild_ids=GUILD_IDS, description="–í–æ–∑–≤—Ä–∞—Ç –≥–æ—Ç–æ–≤–æ–≥–æ —à–∞–±–ª–æ–Ω–∞")
async def return_order(
    inter: disnake.CommandInteraction,
    order_id: int = commands.Param(description="–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞ (–±–µ–∑ #)"),
    template_link: str = commands.Param(
        description="–°—Å—ã–ª–∫–∞ –Ω–∞ –≥–æ—Ç–æ–≤—ã–π —à–∞–±–ª–æ–Ω")):
    await inter.response.defer(ephemeral=True)

    db = load_db()

    if not has_worker_access(inter.user.roles):
        await inter.edit_original_response(
            f"–í–∞–º –Ω–µ–ª—å–∑—è –≤—ã–ø–æ–ª–Ω—è—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É (–î–æ—Å—Ç—É–ø —É <@&{db['workers_role_id']}>)"
        )
        return

    order_key = str(order_id)
    if order_key not in db["orders"]:
        await inter.edit_original_response("‚ùå –ó–∞–∫–∞–∑ —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    order = db["orders"][order_key]

    if order["worker_id"] != inter.user.id:
        await inter.edit_original_response(
            f"‚ö† –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º –¥–ª—è –∑–∞–∫–∞–∑–∞ #{order_id}.")
        return

    embed = disnake.Embed(title=f"‚úÖ –ó–∞–∫–∞–∑ #{str(order_id)} –≤—ã–ø–æ–ª–Ω–µ–Ω",
                          color=disnake.Color.green())
    uid = order["user_id"]
    worker_ = order["worker_id"]
    embed.add_field(name="üßë‚Äçüíª –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å",
                    value=f"<@{worker_}>",
                    inline=False)
    embed.add_field(name="üîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä",
                    value=order['server_link'],
                    inline=False)
    embed.add_field(name="üìÑ –®–∞–±–ª–æ–Ω –Ω—É–∂–µ–Ω –¥–ª—è...",
                    value=order['template_purpose'][:1024],
                    inline=False)
    embed.add_field(name="üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –≥–æ—Ç–æ–≤—ã–π —à–∞–±–ª–æ–Ω",
                    value=template_link,
                    inline=False)

    channel = bot.get_channel(db['channel_id'])
    if channel:
        await channel.send(f'||<@{uid}>||',
                           embed=embed,
                           view=TemplateOrder(channel))

    del db["orders"][order_key]
    database.save_db(db)

    await inter.edit_original_response(
        f"–ó–∞–∫–∞–∑ #{order_id} —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω –∏ —É–¥–∞–ª–µ–Ω –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.")


bot.run(TOKEN)
